@model FoxNetSoft.Plugin.Misc.Articles.Models.SearchArticleModel
@inject IWorkContext workContext
@using Nop.Web.Extensions
@using Nop.Web.Framework.UI
@using Nop.Core
@using Nop.Web.Extensions
@using Microsoft.AspNetCore.Mvc.Rendering
@using FoxNetSoft.Plugin.Misc.Articles.Helpers
@{
    Layout = "_ColumnsTwo";

    Html.AddCssFileParts(ResolveViewPathHelper.GetThemesCSSPath("styles.css"));
    var supportRtl = workContext.WorkingLanguage.Rtl;
    if (supportRtl)
    {
        Html.AddCssFileParts(ResolveViewPathHelper.GetThemesCSSPath("styles.rtl.css"));
    }
    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}
@section left {
    @await Component.InvokeAsync("ArticleNavigation", new { currentGroupId = 0, currentArticleId = 0 })
}
<script type="text/javascript">
                    $(document).ready(function () {

                        $("#@Html.IdFor(model => model.adv)").click(toggleAdvancedSearch);

                        toggleAdvancedSearch();
                    });

                    function toggleAdvancedSearch() {

                        if ($('#@Html.IdFor(model => model.adv)').is(':checked')) {
                            $('#advanced-search-block').show();
                        }
                        else {
                            $('#advanced-search-block').hide();
                        }
                    }

</script>
<div class="page article-page">
    <div class="page-title">
        <h1>@T("FoxNetSoft.Plugin.Misc.Articles.Search.Title")</h1>
    </div>
    <div class="page-body">
        <div class="search-input">
            <form asp-route="ArticleSearch" method="get">
                <div class="basic-search">
                    <div class="inputs">
                        <label asp-for="q">@T("FoxNetSoft.Plugin.Misc.Articles.Search.SearchTerm"):</label>
                        <input asp-for="q" class="search-text" />
                    </div>
                    <div class="inputs reversed">
                        <input asp-for="adv" />
                        <label asp-for="adv">@T("Search.AdvancedSearch")</label>
                    </div>
                </div>
                <div class="advanced-search" id="advanced-search-block">
                    @if (Model.AvailableArticleGroups.Any())
                    {
                        <div class="inputs">
                            <label asp-for="cid">@T("FoxNetSoft.Plugin.Misc.Articles.Search.Group"):</label>
                            <select asp-for="cid" asp-items="Model.AvailableArticleGroups"></select>
                        </div>
                        <div class="inputs reversed">
                            <input asp-for="isc" />
                            <label asp-for="isc">@T("FoxNetSoft.Plugin.Misc.Articles.Search.IncludeSubGroups")</label>
                        </div>
                    }
                    <div class="inputs reversed">
                        <input asp-for="sid" />
                        <label asp-for="sid">@T("FoxNetSoft.Plugin.Misc.Articles.Search.SearchInBody")</label>
                    </div>
                </div>
                <div class="buttons">
                    <input type="submit" class="button-1 search-button" value="@T("FoxNetSoft.Plugin.Misc.Articles.Search.Button")" />
                </div>
                @if (!String.IsNullOrEmpty(Model.Warning))
                {
                <strong class="warning">
                    @Model.Warning
                </strong>
                }
            </form>
        </div>
        <div class="search-results">
            @if (Model.NoResults)
            {
                <strong class="result">
                    @T("FoxNetSoft.Plugin.Misc.Articles.Search.NoResultsText")
                </strong>
            }
            @await Html.PartialAsync(ResolveViewPathHelper.GetThemesPath("Article/_ArticlesBlock.cshtml"), Model.Articles)
            @{
                var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("adv").BooleanParameterName("isc").BooleanParameterName("sid").RenderEmptyParameters(true);
            }
            @if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
        </div>
    </div>
</div>
